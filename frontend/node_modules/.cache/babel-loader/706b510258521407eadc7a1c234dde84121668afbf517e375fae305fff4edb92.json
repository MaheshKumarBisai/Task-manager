{"ast":null,"code":"import _objectSpread from\"/Users/mac/Desktop/take/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useContext,useEffect}from'react';import axios from'axios';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};// Configure axios defaults\naxios.defaults.baseURL=process.env.REACT_APP_API_URL||'';axios.defaults.headers.common['Content-Type']='application/json';export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check for existing authentication on app load\nconst savedUser=localStorage.getItem('taskflow_user');const savedToken=localStorage.getItem('taskflow_token');if(savedUser&&savedToken){try{const parsedUser=JSON.parse(savedUser);setUser(parsedUser);axios.defaults.headers.common['Authorization']=\"Bearer \".concat(savedToken);}catch(error){console.error('Error parsing saved user:',error);localStorage.removeItem('taskflow_user');localStorage.removeItem('taskflow_token');}}setLoading(false);},[]);const login=async(username,password)=>{try{const response=await axios.post('/api/auth/login',{username:username.trim(),password});if(response.data.success){const{user,token}=response.data;// Save user data and token\nsetUser(user);localStorage.setItem('taskflow_user',JSON.stringify(user));localStorage.setItem('taskflow_token',token);axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);return{success:true};}else{return{success:false,message:response.data.message||'Login failed'};}}catch(error){var _error$response,_error$response$data;console.error('Login error:',error);return{success:false,message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Network error. Please try again.'};}};const register=async userData=>{try{// Validate input data\nif(!userData.username||!userData.email||!userData.password||!userData.name){return{success:false,message:'All fields are required'};}const response=await axios.post('/api/auth/register',{username:userData.username.trim(),email:userData.email.trim(),name:userData.name.trim(),password:userData.password});if(response.data.success){const{user,token}=response.data;// Save user data and token\nsetUser(user);localStorage.setItem('taskflow_user',JSON.stringify(user));localStorage.setItem('taskflow_token',token);axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);return{success:true};}else{return{success:false,message:response.data.message||'Registration failed'};}}catch(error){var _error$response2,_error$response2$data;console.error('Registration error:',error);return{success:false,message:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Network error. Please try again.'};}};const logout=()=>{setUser(null);localStorage.removeItem('taskflow_user');localStorage.removeItem('taskflow_token');delete axios.defaults.headers.common['Authorization'];toast.success('Logged out successfully');};const updateUser=updatedUserData=>{const updatedUser=_objectSpread(_objectSpread({},user),updatedUserData);setUser(updatedUser);localStorage.setItem('taskflow_user',JSON.stringify(updatedUser));};const value={user,login,register,logout,updateUser,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","toast","jsx","_jsx","AuthContext","useAuth","context","Error","defaults","baseURL","process","env","REACT_APP_API_URL","headers","common","AuthProvider","_ref","children","user","setUser","loading","setLoading","savedUser","localStorage","getItem","savedToken","parsedUser","JSON","parse","concat","error","console","removeItem","login","username","password","response","post","trim","data","success","token","setItem","stringify","message","_error$response","_error$response$data","register","userData","email","name","_error$response2","_error$response2$data","logout","updateUser","updatedUserData","updatedUser","_objectSpread","value","Provider"],"sources":["/Users/mac/Desktop/take/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Configure axios defaults\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || '';\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing authentication on app load\n    const savedUser = localStorage.getItem('taskflow_user');\n    const savedToken = localStorage.getItem('taskflow_token');\n\n    if (savedUser && savedToken) {\n      try {\n        const parsedUser = JSON.parse(savedUser);\n        setUser(parsedUser);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${savedToken}`;\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('taskflow_user');\n        localStorage.removeItem('taskflow_token');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username: username.trim(),\n        password\n      });\n\n      if (response.data.success) {\n        const { user, token } = response.data;\n\n        // Save user data and token\n        setUser(user);\n        localStorage.setItem('taskflow_user', JSON.stringify(user));\n        localStorage.setItem('taskflow_token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        return { success: true };\n      } else {\n        return { \n          success: false, \n          message: response.data.message || 'Login failed' \n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Network error. Please try again.' \n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      // Validate input data\n      if (!userData.username || !userData.email || !userData.password || !userData.name) {\n        return {\n          success: false,\n          message: 'All fields are required'\n        };\n      }\n\n      const response = await axios.post('/api/auth/register', {\n        username: userData.username.trim(),\n        email: userData.email.trim(),\n        name: userData.name.trim(),\n        password: userData.password\n      });\n\n      if (response.data.success) {\n        const { user, token } = response.data;\n\n        // Save user data and token\n        setUser(user);\n        localStorage.setItem('taskflow_user', JSON.stringify(user));\n        localStorage.setItem('taskflow_token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        return { success: true };\n      } else {\n        return { \n          success: false, \n          message: response.data.message || 'Registration failed' \n        };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Network error. Please try again.' \n      };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('taskflow_user');\n    localStorage.removeItem('taskflow_token');\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n\n  const updateUser = (updatedUserData) => {\n    const updatedUser = { ...user, ...updatedUserData };\n    setUser(updatedUser);\n    localStorage.setItem('taskflow_user', JSON.stringify(updatedUser));\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    updateUser,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}