{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/take/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Configure axios defaults\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || '';\naxios.defaults.headers.common['Content-Type'] = 'application/json';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing authentication on app load\n    const savedUser = localStorage.getItem('taskflow_user');\n    const savedToken = localStorage.getItem('taskflow_token');\n    if (savedUser && savedToken) {\n      try {\n        const parsedUser = JSON.parse(savedUser);\n        setUser(parsedUser);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${savedToken}`;\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('taskflow_user');\n        localStorage.removeItem('taskflow_token');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username: username.trim(),\n        password\n      });\n      if (response.data.success) {\n        const {\n          user,\n          token\n        } = response.data;\n\n        // Save user data and token\n        setUser(user);\n        localStorage.setItem('taskflow_user', JSON.stringify(user));\n        localStorage.setItem('taskflow_token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message || 'Login failed'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Network error. Please try again.'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      // Validate input data\n      if (!userData.username || !userData.email || !userData.password || !userData.name) {\n        return {\n          success: false,\n          message: 'All fields are required'\n        };\n      }\n      const response = await axios.post('/api/auth/register', {\n        username: userData.username.trim(),\n        email: userData.email.trim(),\n        name: userData.name.trim(),\n        password: userData.password\n      });\n      if (response.data.success) {\n        const {\n          user,\n          token\n        } = response.data;\n\n        // Save user data and token\n        setUser(user);\n        localStorage.setItem('taskflow_user', JSON.stringify(user));\n        localStorage.setItem('taskflow_token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message || 'Registration failed'\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Network error. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('taskflow_user');\n    localStorage.removeItem('taskflow_token');\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n  const updateUser = updatedUserData => {\n    const updatedUser = {\n      ...user,\n      ...updatedUserData\n    };\n    setUser(updatedUser);\n    localStorage.setItem('taskflow_user', JSON.stringify(updatedUser));\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    updateUser,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","defaults","baseURL","process","env","REACT_APP_API_URL","headers","common","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","savedToken","parsedUser","JSON","parse","error","console","removeItem","login","username","password","response","post","trim","data","success","token","setItem","stringify","message","_error$response","_error$response$data","register","userData","email","name","_error$response2","_error$response2$data","logout","updateUser","updatedUserData","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/take/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Configure axios defaults\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || '';\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing authentication on app load\n    const savedUser = localStorage.getItem('taskflow_user');\n    const savedToken = localStorage.getItem('taskflow_token');\n\n    if (savedUser && savedToken) {\n      try {\n        const parsedUser = JSON.parse(savedUser);\n        setUser(parsedUser);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${savedToken}`;\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('taskflow_user');\n        localStorage.removeItem('taskflow_token');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username: username.trim(),\n        password\n      });\n\n      if (response.data.success) {\n        const { user, token } = response.data;\n\n        // Save user data and token\n        setUser(user);\n        localStorage.setItem('taskflow_user', JSON.stringify(user));\n        localStorage.setItem('taskflow_token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        return { success: true };\n      } else {\n        return { \n          success: false, \n          message: response.data.message || 'Login failed' \n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Network error. Please try again.' \n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      // Validate input data\n      if (!userData.username || !userData.email || !userData.password || !userData.name) {\n        return {\n          success: false,\n          message: 'All fields are required'\n        };\n      }\n\n      const response = await axios.post('/api/auth/register', {\n        username: userData.username.trim(),\n        email: userData.email.trim(),\n        name: userData.name.trim(),\n        password: userData.password\n      });\n\n      if (response.data.success) {\n        const { user, token } = response.data;\n\n        // Save user data and token\n        setUser(user);\n        localStorage.setItem('taskflow_user', JSON.stringify(user));\n        localStorage.setItem('taskflow_token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        return { success: true };\n      } else {\n        return { \n          success: false, \n          message: response.data.message || 'Registration failed' \n        };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Network error. Please try again.' \n      };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('taskflow_user');\n    localStorage.removeItem('taskflow_token');\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n\n  const updateUser = (updatedUserData) => {\n    const updatedUser = { ...user, ...updatedUserData };\n    setUser(updatedUser);\n    localStorage.setItem('taskflow_user', JSON.stringify(updatedUser));\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    updateUser,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}